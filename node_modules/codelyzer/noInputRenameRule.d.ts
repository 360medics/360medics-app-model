import { IRuleMetadata, RuleFailure } from 'tslint';
import { AbstractRule } from 'tslint/lib/rules';
import { Decorator, PropertyDeclaration, SourceFile } from 'typescript';
import { DirectiveMetadata } from './angular/metadata';
import { NgWalker } from './angular/ngWalker';
export declare class Rule extends AbstractRule {
    static readonly metadata: IRuleMetadata;
    static readonly FAILURE_STRING: string;
    apply(sourceFile: SourceFile): RuleFailure[];
}
export declare const getFailureMessage: (className: string, propertyName: string) => string;
export declare class InputMetadataWalker extends NgWalker {
    private directiveSelectors;
    protected visitNgDirective(metadata: DirectiveMetadata): void;
    protected visitNgInput(property: PropertyDeclaration, input: Decorator, args: string[]): void;
    private canPropertyBeAliased;
    private validateInput;
}
